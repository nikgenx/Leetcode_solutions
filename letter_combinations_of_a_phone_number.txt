class Solution {
public:
    unordered_map<char,string> map={{'2',"abc"},{'3',"def"},{'4',"ghi"},{'5',"jkl"},{'6',"mno"},{'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"}};
    void backtrack(int i,string digits,vector<string> &res,string temp){
        if(i>=digits.size())
            res.push_back(temp);
        else{
            for(int k=0;k<map[digits[i]].size();k++){
                backtrack(i+1,digits,res,temp+(map[digits[i]][k]));
            }
        }
    }
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        if(digits.size()==0)
            return res;
        backtrack(0,digits,res,"");
        return res;
    }
    
};