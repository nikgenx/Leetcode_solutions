class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> result;
        vector<int>temp;
        sort(candidates.begin(),candidates.end());
        recur(0,result,temp,candidates,target);
        return result;
    }
    void recur(int index,vector<vector<int>>& result,vector<int>& temp,vector<int>& candidates,int target){
        if(target<0)
            return;
        if(target==0){
            result.push_back(temp);
            return;
        }
        for(int i=index;i<candidates.size();i++){
            if(i>index and candidates[i]==candidates[i-1])
                continue;
            temp.push_back(candidates[i]);
            recur(i+1,result,temp,candidates,target-candidates[i]);
            temp.pop_back();
        }
        // temp.pop_back();
    }
};