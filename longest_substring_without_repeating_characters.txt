class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int start=0,end=0;
        int max=0,count=0;
        unordered_map<char,int> umap;
        for(auto x:s){
            if(umap.find(x)!=umap.end() &&(umap.find(x)->second>=start)){
                start=umap[x]+1;
                umap[x]=end;
                end+=1;
            }
            else{
                umap[x]=end;
                end+=1;
            }
            count=end-start;
            if(max<count){
                max=count;
            }
        }
        return max;
    }
};